# This is a basic workflow to help you get started with Actions

name: CD Python API

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - "api/ml_api/**"
      - "api/pyproject.toml"
      - "api/poetry.lock"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v22.2

      - name: Update Dependencies
        if: contains(steps.changed-files.outputs.modified_files, 'pyproject.toml')
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE }}
          port: 22
          script: |
            sudo su
            cd ~
            cd artjuna-monorepo
            git pull origin main
            conda activate production
            poetry install --no-dev

      - name: Git Pull and Restart API
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE }}
          port: 22
          script: |
            cd
            cp .env artjuna-monorepo  
            cd artjuna-monorepo
            git pull origin main
            pm2 restart python-api
